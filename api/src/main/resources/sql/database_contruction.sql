DROP DATABASE IF EXISTS restaurantbuddy;
CREATE DATABASE restaurantbuddy;

DROP USER IF EXISTS 'restaurantbuddy'@'localhost';
CREATE USER IF NOT EXISTS 'restaurantbuddy'@'localhost' IDENTIFIED BY 'restaurantbuddy';
GRANT ALL PRIVILEGES ON restaurantbuddy.* TO 'restaurantbuddy'@'localhost' IDENTIFIED BY 'restaurantbuddy';

USE restaurantbuddy;

CREATE TABLE ITEM
(
    ITEM_ID          INT PRIMARY KEY NOT NULL,
    ITEM_NAME        VARCHAR(50)     NOT NULL,
    ITEM_COST        DECIMAL(7, 2)   NOT NULL,
    ITEM_DESCRIPTION VARCHAR(500)
);

CREATE TABLE MENU
(
    MENU_ID   INT PRIMARY KEY NOT NULL,
    MENU_NAME VARCHAR(50)     NOT NULL
);

CREATE TABLE MENU_ITEM
(
    MENU_ID INT NOT NULL REFERENCES MENU (MENU_ID),
    ITEM_ID INT NOT NULL REFERENCES ITEM (ITEM_ID),
    PRIMARY KEY (MENU_ID, ITEM_ID)
);

CREATE TABLE ROLE
(
    ROLE_ID          INT         NOT NULL PRIMARY KEY,
    ROLE_NAME        VARCHAR(50) NOT NULL,
    ROLE_DESCRIPTION VARCHAR(500)
);

CREATE TABLE LOGIN
(
    LOGIN_ID            INT PRIMARY KEY NOT NULL,
    LOGIN_USERNAME      VARCHAR(50)     NOT NULL,
    LOGIN_PASSWORD_HASH CHAR(60)        NOT NULL
);

CREATE TABLE LOGIN_ROLE
(
    LOGIN_ID INT NOT NULL REFERENCES LOGIN (LOGIN_ID),
    ROLE_ID  INT NOT NULL REFERENCES ROLE (ROLE_ID),
    PRIMARY KEY (LOGIN_ID, ROLE_ID)
);

CREATE TABLE USER
(
    USER_ID         INT PRIMARY KEY NOT NULL,
    USER_FIRST_NAME VARCHAR(50)     NOT NULL,
    USER_LAST_NAME  VARCHAR(50)     NOT NULL,
    USER_EMAIL      VARCHAR(100)    NOT NULL,
    USER_PHONE      VARCHAR(100)    NOT NULL,
    USER_ADDRESS    VARCHAR(50)     NOT NULL,
    USER_CITY       VARCHAR(50)     NOT NULL,
    USER_STATE      CHAR(2)         NOT NULL,
    USER_ZIP        CHAR(5)         NOT NULL,
    LOGIN_ID        INT             NOT NULL UNIQUE REFERENCES LOGIN (LOGIN_ID)
);

CREATE TABLE OWNER
(
    OWNER_ID INT PRIMARY KEY NOT NULL,
    USER_ID  INT             NOT NULL UNIQUE REFERENCES USER (USER_ID)
);

CREATE TABLE EMPLOYEE
(
    EMPLOYEE_ID     INT PRIMARY KEY NOT NULL,
    EMPLOYEE_SALARY DECIMAL(9, 2),
    USER_ID         INT             NOT NULL UNIQUE REFERENCES USER (USER_ID)
);

CREATE TABLE CUSTOMER
(
    CUSTOMER_ID INT PRIMARY KEY NOT NULL,
    USER_ID     INT             NOT NULL UNIQUE REFERENCES USER (USER_ID)
);

CREATE TABLE PURCHASE
(
    PURCHASE_ID        INT PRIMARY KEY NOT NULL,
    CUSTOMER_ID        INT             NOT NULL REFERENCES CUSTOMER (CUSTOMER_ID),
    PURCHASE_TIMESTAMP DATETIME        NOT NULL
);

CREATE TABLE PURCHASE_ITEM
(
    PURCHASE_ID          INT REFERENCES PURCHASE (PURCHASE_ID),
    ITEM_ID              INT REFERENCES ITEM (ITEM_ID),
    PURCHASE_ITEM_AMOUNT DECIMAL(9, 2) NOT NULL,
    PURCHASE_ITEM_TAX    DECIMAL(9, 2) NOT NULL
);

# CREATE TABLE LOCATION
# (
#     LOCATION_ID      INT PRIMARY KEY NOT NULL,
#     LOCATION_NAME    VARCHAR(50)     NOT NULL,
#     LOCATION_ADDRESS VARCHAR(50)     NOT NULL,
#     LOCATION_CITY    VARCHAR(50)     NOT NULL,
#     LOCATION_STATE   CHAR(2)         NOT NULL,
#     LOCATION_ZIP     CHAR(5)         NOT NULL
# );
#
# CREATE TABLE INGREDIENT
# (
#     INGREDIENT_ID              INT PRIMARY KEY NOT NULL,
#     INGREDIENT_NAME            VARCHAR(50)     NOT NULL,
#     INGREDIENT_COST            DECIMAL(7, 2),
#     INGREDIENT_CHARACTERISTICS VARCHAR(500)
# );
#
# CREATE TABLE INVENTORY
# (
#     LOCATION_ID   INT REFERENCES LOCATION (LOCATION_ID),
#     INGREDIENT_ID INT REFERENCES INGREDIENT (INGREDIENT_ID),
#     PRIMARY KEY (LOCATION_ID, INGREDIENT_ID)
# );
#
# CREATE TABLE LOCATION_EMPLOYEE
# (
#     LOCATION_ID INT NOT NULL REFERENCES LOCATION (LOCATION_ID),
#     EMPLOYEE_ID INT NOT NULL REFERENCES EMPLOYEE (EMPLOYEE_ID),
#     PRIMARY KEY (LOCATION_ID, EMPLOYEE_ID)
# );
#
#
# CREATE TABLE ITEM_INGREDIENT
# (
#     ITEM_ID       INT NOT NULL REFERENCES ITEM (ITEM_ID),
#     INGREDIENT_ID INT NOT NULL REFERENCES INGREDIENT (INGREDIENT_ID),
#     PRIMARY KEY (ITEM_ID, INGREDIENT_ID)
# );

