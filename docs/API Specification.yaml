openapi: "3.0.3"
info:
  title: "RestaurantBuddy API Documentation"
  description: "Documentation for the API routes, models, and responses."
  version: "0.0.1-dev"
paths:

  /about/status:
    get:
      summary: "Route to test whether the server is running."
      operationId: "getStatus"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GenericResponseModel"

  /about/locations:
    get:
      summary: "Route to retrieve the locations of the restaurant."
      operationId: "getLocations"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AllLocationsModel"

  /customer:
    get:
      summary: "Route to test whether the authenticated user is authorized to access the CUSTOMER portion of the API."
      operationId: "index"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GenericResponseModel"

  /customer/items:
    get:
      summary: "Retrieves all of the menu items offered by the restaurant."
      operationId: "readAllItems"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AllItemsModel"

  /customer/items/{primaryKey}:
    get:
      summary: "Retrieve a menu item offered by the restaurant by primary key."
      operationId: "readMenuItemById"
      parameters:
        - name: "primaryKey"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ItemModel"

  /customer/order:
    post:
      summary: "Route to place an order by the authenticated user."
      operationId: "placeOrder"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderModel"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GenericResponseModel"

  /customer/orders:
    get:
      summary: "Route to retrieve all the orders the authenticated customer has placed."
      operationId: "getAllOrders"
      responses:
        "200":
          description: "OK"
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AllPurchasesModel"

components:
  schemas:
    GenericResponseModel:
      type: "object"
      properties:
        successMessage:
          type: "string"
        errorMessage:
          type: "string"
    ItemModel:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        price:
          type: "number"
          format: "double"
        description:
          type: "string"
        image:
          type: "string"
        menus:
          type: "array"
          items:
            type: "string"
    AllItemsModel:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemModel"
    OrderModel:
      type: "object"
      properties:
        menuItems:
          type: "array"
          items:
            type: "integer"
            format: "int64"
    PurchaseModel:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        timePlaced:
          type: "string"
          format: "date-time"
        timeCompleted:
          type: "string"
          format: "date-time"
        customerUsername:
          type: "string"
        items:
          $ref: "#/components/schemas/AllItemsModel"
    AllPurchasesModel:
      type: "object"
      properties:
        purchases:
          type: "array"
          items:
            $ref: "#/components/schemas/PurchaseModel"
    LocationModel:
      type: "object"
      properties:
        address:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
    AllLocationsModel:
      type: "object"
      properties:
        locations:
          type: "array"
          items:
            $ref: "#/components/schemas/LocationModel"